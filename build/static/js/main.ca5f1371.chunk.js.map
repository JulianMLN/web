{"version":3,"sources":["logo.svg","Auth.js","login.js","signup.js","addbet.js","shop.js","getbet.js","removebet.js","dashboard.js","Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Auth","token","localStorage","setItem","getItem","removeItem","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","password","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","defineProperty","target","value","_this2","preventDefault","_this$state","Axios","post","then","response","console","log","authenticateUser","data","getToken","refreshPage","error","react_default","a","createElement","className","onSubmit","type","onChange","placeholder","required","Component","Signup","email","repeat_password","message","result","document","location","reload","id","AddBet","date","sport","title","amount","cote","profit_loose","handleChangeDate","handleChangeSport","handleChangeTitle","handleChangeAmount","handleChangeCote","handleChangePL","alert","headers","Authorization","React","GetBet","bets","axios","get","map","bet","RemoveBet","handleChangeId","Dashboard","forceUpdate","src","src_getbet","src_addbet","src_removebet","Homepage","show","shown","deauthenticateUser","display","hidden","isUserAuthenticated","src_dashboard","onClick","logout","style","src_login","toggle","src_signup","App","src_Homepage","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.ca5f1371.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","class Auth {\r\n\r\n  /**\r\n   * Authenticate a user. Save a token string in Local Storage\r\n   *\r\n   * @param {string} token\r\n   */\r\n  static authenticateUser(token) {\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  /**\r\n   * Check if a user is authenticated - check if a token is saved in Local Storage\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  static isUserAuthenticated() {\r\n    return localStorage.getItem('token') !== null;\r\n  }\r\n\r\n  /**\r\n   * Deauthenticate a user. Remove a token from Local Storage.\r\n   *\r\n   */\r\n  static deauthenticateUser() {\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  /**\r\n   * Get a token value.\r\n   *\r\n   * @returns {string}\r\n   */\r\n\r\n  static getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  /**\r\n   * Get a user id value.\r\n   *\r\n   * @returns {string}\r\n   */\r\n\r\n  static getUserId() {\r\n    return localStorage.getItem('userId');\r\n  }\r\n\r\n}\r\n\r\nexport default Auth;\r\n","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport Auth from './Auth';\r\nimport './login.css'\r\n\r\nclass Login  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: '',password:''};\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n          this.setState({[event.target.name]: event.target.value});\r\n      }\r\n\r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        const {name,password} = this.state;\r\n        // Send a post request\r\n        \r\n        Axios.post('/login',{name,password}).then((response)=>{\r\n            // access response\r\n            console.log('Result:',response);\r\n            // save the token\r\n            Auth.authenticateUser(response.data.token);\r\n            console.log('token:',Auth.getToken());\r\n            this.setState({name:'',password:''});\r\n            //windows.location.reload();\r\n            this.props.refreshPage();\r\n        },\r\n        (error)=>{\r\n          console.log(error);\r\n        });\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          \r\n          <div className=\"loginform\">\r\n          <h1>Sign In</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n              <input type=\"text\" value={this.state.name} onChange={this.handleChange} placeholder=\"User\" name=\"name\" required/><br/>\r\n              <input type=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" name=\"password\" required/><br/>\r\n            <input type=\"submit\" value=\"Submit\" /><br/>\r\n          </form>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport \"./signup.css\"\r\n\r\nclass Signup  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: '', email:'', password:'', repeat_password:'', message:''};\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n          this.setState({[event.target.name]: event.target.value});\r\n      }\r\n\r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        const {name,password, repeat_password, email} = this.state;\r\n        if(password != repeat_password){\r\n            this.setState({message : 'Password does not match with repeat password field!<br/>'});\r\n        }\r\n        /*\r\n        if(validateEmail(email)){\r\n            this.state.message += 'Email is not valid!<br/>';\r\n        }\r\n        */\r\n        // Send a post request\r\n        \r\n        Axios.post('/register',{name,email,password}).then((result)=>{\r\n            // access results\r\n            console.log(result);\r\n        }).then(\r\n          (response) =>{\r\n            //console.log(response.data);\r\n            \r\n            // redirect signed in user to dashboard\r\n            this.props.refreshPage();\r\n          },\r\n          (error)=>{\r\n            console.log(error);\r\n            document.location.reload(true);          }\r\n        );\r\n        \r\n      }\r\n    \r\n      render() {\r\n        return (\r\n            <div id=\"signup\">\r\n            <h1>Registration</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n            \r\n            <label>\r\n              Name:\r\n              <input type=\"text\" value={this.state.name} onChange={this.handleChange} name=\"name\" required/>\r\n            </label><br/>\r\n            <label>\r\n              Email:\r\n              <input type=\"text\" value={this.state.email} onChange={this.handleChange} name=\"email\" required/>\r\n            </label><br/>\r\n            <label>\r\n            Password: \r\n            <input type=\"password\" value={this.state.password} onChange={this.handleChange} name=\"password\" required/>\r\n            </label><br/>\r\n            <label>\r\n            Repead-Password:\r\n            <input type=\"password\" value={this.state.repeat_password} onChange={this.handleChange} name=\"repeat_password\" required/>\r\n            </label><br/>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n            \r\n            </form>\r\n            <div id=\"message\">{this.state.message}</div>\r\n            </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Signup;","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport './addbet.css';\r\nimport Auth from './Auth';\r\n\r\nclass AddBet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: '',\r\n            sport: '',\r\n            title: '',\r\n            amount: 0.0,\r\n            cote: 0.0,\r\n            profit_loose: 0.0,\r\n\r\n        }\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n        this.handleChangeSport = this.handleChangeSport.bind(this);\r\n        this.handleChangeTitle = this.handleChangeTitle.bind(this);\r\n        this.handleChangeAmount = this.handleChangeAmount.bind(this);\r\n        this.handleChangeCote = this.handleChangeCote.bind(this);\r\n        this.handleChangePL = this.handleChangePL.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    handleChangeDate(event) {\r\n        this.setState({date: event.target.value});\r\n    }\r\n    handleChangeSport(event) {\r\n        this.setState({sport: event.target.value});\r\n    }\r\n    handleChangeTitle(event) {\r\n        this.setState({title: event.target.value});\r\n    }\r\n    handleChangeAmount(event) {\r\n        this.setState({amount: event.target.value});\r\n    }\r\n    handleChangeCote(event) {\r\n        this.setState({cote: event.target.value});\r\n    }\r\n    handleChangePL(event) {\r\n        this.setState({profit_loose: event.target.value});\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        alert('A data was submitted: ' + this.state.date +' - '+ this.state.sport +' - '+ this.state.title +' - '+ this.state.amount +' - '+ this.state.cote +' - '+ this.state.profit_loose);\r\n        event.preventDefault();\r\n    \r\n        const {date,sport,title,amount,cote,profit_loose} = this.state;\r\n            \r\n        console.log({date,sport,title,amount,cote,profit_loose});\r\n        console.log(Auth.getToken());\r\n        // Send a post request\r\n        Axios.post('/addbet',{date,sport,title,amount,cote,profit_loose},{headers: {\r\n            Authorization: \"Bearer \" + Auth.getToken()\r\n         }}).then((result)=>{\r\n            //access results\r\n            console.log(result);\r\n        });\r\n\r\n\r\n        /*{headers: {\r\n            Authorization: \"Bearer \" + Auth.getToken()\r\n         }}*/\r\n        \r\n       /* Axios.post('/addbet',{date,sport,title,amount,cote,profit_loose}\r\n         ).then((response) => {\r\n            console.log(response.data);\r\n        });*/\r\n        \r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"betform\">\r\n                <h1>Add a new Bet</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <label>Betting Title :\r\n                <input type=\"text\" value={this.state.title} onChange={this.handleChangeTitle} placeholder=\"Title of Bet\"required/><br/>\r\n                </label>\r\n                <label>Type of sport :\r\n                <input type=\"text\" value={this.state.sport} onChange={this.handleChangeSport} placeholder=\"Sport\"required/><br/>\r\n                </label>\r\n                <label>Betting Date:\r\n                <input type=\"date\" onChange={this.handleChangeDate} placeholder=\"Date\" required/><br/>\r\n                </label>\r\n                <label>Amount of betting :\r\n                <input type=\"number\" onChange={this.handleChangeAmount} placeholder=\"Amount of betting\" required/><br/>\r\n                </label>\r\n                <label>Cote of betting :\r\n                <input type=\"number\" onChange={this.handleChangeCote} placeholder=\"Cote\" required/><br/>\r\n                </label>\r\n                <label>Amount of Profit or Loose :\r\n                <input type=\"number\"  onChange={this.handleChangePL} placeholder=\"Profit or Loose\" required/><br/>\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default AddBet;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Auth from './Auth';\r\n\r\nclass Shop extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products :[]\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        axios.get('/products',{headers: {\r\n            Authorization: \"Bearer \" + Auth.getToken()\r\n         }}).then((response) => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                products: response.data\r\n            })\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let products = this.state.products.map((product)=>{\r\n            return(\r\n                <tr>\r\n                    <td>{product.name}</td>\r\n                    <td><img class=\"itemShop\" src={product.image}/></td>\r\n                    <td>{product.price}</td>\r\n                </tr>\r\n            )\r\n        });\r\n        return(<tbody> {products} </tbody>);\r\n        \r\n    }\r\n}\r\n\r\nexport default Shop;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Auth from './Auth';\r\nimport './getbet.css'\r\n\r\nclass GetBet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bets :[]\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        axios.get('/getbet',{headers: {\r\n            Authorization: \"Bearer \" + Auth.getToken()\r\n         }}).then((response) => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                bets: response.data\r\n            })\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let bets = this.state.bets.map((bet)=>{\r\n            return(\r\n                <div className=\"gettbet\">\r\n                <table>\r\n                <tr>\r\n                    <td>{bet.id}</td>\r\n                    <td>{bet.sport}</td>\r\n                    <td>{bet.title}</td>\r\n                    <td>{bet.amount}</td>\r\n                    <td>{bet.cote}</td>\r\n                    <td>{bet.profit_loose}</td>\r\n\r\n                </tr>\r\n                </table>\r\n                </div>\r\n            )\r\n        });\r\n        return(<tbody>{bets} </tbody>);\r\n        \r\n    }\r\n}\r\n\r\nexport default GetBet;","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport './removebet.css';\r\nimport Auth from './Auth';\r\n\r\nclass RemoveBet extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id : 0,\r\n        }\r\n\r\n        this.handleChangeId = this.handleChangeId.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChangeId(event) {\r\n        this.setState({id: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        alert('A data was submitted: ' + this.state.id);\r\n        event.preventDefault();\r\n    \r\n        const {id} = this.state;\r\n        console.log({id});\r\n        console.log(Auth.getToken());\r\n        // Send a post request\r\n        Axios.post('/removebet',{id},{headers: {\r\n            Authorization: \"Bearer \" + Auth.getToken()\r\n         }}).then((result)=>{\r\n            //access results\r\n            console.log(result);\r\n        });\r\n    }\r\n\r\n        render() {\r\n            return(\r\n                <div className=\"removebet\">\r\n                    <h1>Remove a Bet</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>Number of the bet to remove :\r\n                    <input type=\"number\" onChange={this.handleChangeId} placeholder=\"Number of Bet to remove\" required/><br/>\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                    </form>\r\n              </div>\r\n            );\r\n        }\r\n}\r\n\r\nexport default RemoveBet;","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport './dashboard.css';\r\nimport AddBet from './addbet';\r\nimport GetBet from './getbet';\r\nimport Auth from './Auth';\r\nimport RemoveBet from './removebet';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.refreshPage = this.refreshPage.bind(this);\r\n        }\r\n\r\n        refreshPage(){\r\n            this.forceUpdate();\r\n        }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"dashboard\" refreshPage={this.refreshPage}>\r\n                <h1>Dashboard</h1>\r\n                <img src=\"graph.jpeg\"></img>\r\n                <div className=\"get\">\r\n                <h1>List of Bets</h1>\r\n                <table>\r\n                <tr>\r\n                    <td><strong>N°</strong></td>\r\n                    <td><strong>Sport</strong></td>\r\n                    <td><strong>Title</strong></td>\r\n                    <td><strong>Amount</strong></td>\r\n                    <td><strong>Cote</strong></td>\r\n                    <td><strong>P&L</strong></td>\r\n                </tr>\r\n                </table>\r\n                </div>\r\n                <GetBet refreshPage={this.refreshPage}/>\r\n                <AddBet refreshPage={this.refreshPage}/>\r\n                <RemoveBet refreshPage={this.refreshPage}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Dashboard;","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport Auth from './Auth';\r\nimport Login from './login';\r\nimport Signup from './signup';\r\nimport Shop from './shop';\r\nimport Dashboard from './dashboard';\r\n\r\nclass Homepage  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {show: false};\r\n        this.refreshPage = this.refreshPage.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n\t\tthis.setState({\r\n\t\t\tshown: !this.state.shown\r\n\t\t});\r\n    }\r\n\r\n    refreshPage(){\r\n        this.forceUpdate();\r\n    }\r\n\r\n    logout(){\r\n        alert('logout');\r\n\r\n        // Add this token to blacklist \r\n        Axios.post('/logout',{token:Auth.getToken()}).then((result)=>{\r\n            // access results\r\n            console.log(result);\r\n        })\r\n\r\n        // Delete token from browser\r\n        Auth.deauthenticateUser();\r\n\r\n        this.refreshPage();  \r\n    }\r\n    \r\n    render() {\r\n        var shown = {\r\n\t\t\tdisplay: this.state.shown ? \"none\" : \"block\"\r\n\t\t};\r\n\t\t\r\n\t\tvar hidden = {\r\n            display: this.state.shown ? \"block\" : \"none\"\r\n        };\r\n        \r\n        return (\r\n            <div>\r\n            {Auth.isUserAuthenticated() ? (\r\n                <div>\r\n                    <Dashboard refreshPage={this.refreshPage}/>\r\n                    <div id=\"logout\"><button onClick={this.logout.bind(this)}>LogOut</button></div>\r\n                </div>\r\n             ) : (\r\n               <div id=\"login\">\r\n                 <div style={ shown }>\r\n                    <Login refreshPage={this.refreshPage} /><br/>\r\n                    <button onClick={this.toggle.bind(this)}>Register</button>\r\n                 </div>\r\n                 <div style={ hidden }>\r\n                    <Signup refreshPage={this.refreshPage} />\r\n                </div>\r\n                  \r\n               </div>\r\n           )}\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Homepage from './Homepage';\r\n\r\nfunction App() {  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Homepage/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}